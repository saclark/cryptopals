package pkcs7

import (
	"bytes"
	"fmt"
	"testing"
)

func TestPad(t *testing.T) {
	tt := []struct {
		plaintext []byte
		blockSize int
		want      []byte
	}{
		{[]byte{}, 4, []byte("\x04\x04\x04\x04")},
		{[]byte("0"), 4, []byte("0\x03\x03\x03")},
		{[]byte("00"), 4, []byte("00\x02\x02")},
		{[]byte("000"), 4, []byte("000\x01")},
		{[]byte("0000"), 4, []byte("0000\x04\x04\x04\x04")},
		{[]byte("00000"), 4, []byte("00000\x03\x03\x03")},
		{[]byte("000000"), 4, []byte("000000\x02\x02")},
		{[]byte("0000000"), 4, []byte("0000000\x01")},
		{[]byte("00000000"), 4, []byte("00000000\x04\x04\x04\x04")},
		{[]byte{}, 1, []byte("\x01")},
		{[]byte{}, 255, []byte("\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff")},
	}

	for _, tc := range tt {
		t.Run(fmt.Sprintf("%v,%d", tc.plaintext, tc.blockSize), func(t *testing.T) {
			if got := Pad(tc.plaintext, tc.blockSize); !bytes.Equal(tc.want, got) {
				t.Errorf("want: '%v', got: '%v'", tc.want, got)
			}
		})
	}
}
